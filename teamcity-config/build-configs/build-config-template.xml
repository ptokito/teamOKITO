<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    TeamCity Build Configuration Template - XML Format
    This demonstrates an alternative approach to Configuration as Code using XML
    
    Benefits of XML approach:
    - Familiar format for many developers
    - Easy to parse and validate
    - Good tooling support
    - Can be generated from other tools
-->
<build-type id="BuildConfigTemplate" name="Build Configuration Template">
    <description>Template for creating new build configurations</description>
    
    <!-- VCS Settings -->
    <vcs>
        <root id="GitRepo"/>
        <clean-checkout>true</clean-checkout>
    </vcs>
    
    <!-- Build Steps -->
    <steps>
        <!-- Maven Build Step -->
        <step type="Maven" id="maven-build">
            <name>Maven Build</name>
            <parameters>
                <parameter name="goals" value="clean compile test"/>
                <parameter name="jvmArgs" value="-Xmx2048m"/>
                <parameter name="mavenVersion" value="bundled"/>
            </parameters>
        </step>
        
        <!-- Custom Script Step -->
        <step type="CommandLine" id="custom-script">
            <name>Custom Script</name>
            <parameters>
                <parameter name="script.executable" value="bash"/>
                <parameter name="script.arguments" value="-c"/>
                <parameter name="script.content" value="echo 'Custom build step executed'"/>
            </parameters>
        </step>
    </steps>
    
    <!-- Build Triggers -->
    <triggers>
        <vcs-trigger>
            <branch-filter>+:*</branch-filter>
            <group-checkins-by-committer>true</group-checkins-by-committer>
            <per-checkin-triggering>true</per-checkin-triggering>
        </vcs-trigger>
    </triggers>
    
    <!-- Build Features -->
    <features>
        <!-- Build History -->
        <feature type="BuildHistory" id="build-history">
            <parameters>
                <parameter name="maxResults" value="50"/>
            </parameters>
        </feature>
        
        <!-- Notifications -->
        <feature type="notifications" id="email-notifications">
            <parameters>
                <parameter name="notifyBuildStart" value="true"/>
                <parameter name="notifyBuildSuccess" value="true"/>
                <parameter name="notifyBuildFailure" value="true"/>
                <parameter name="notifyBuildToUsers" value="true"/>
            </parameters>
        </feature>
    </features>
    
    <!-- Failure Conditions -->
    <failure-conditions>
        <failure-condition type="executionTimeout" id="timeout">
            <parameters>
                <parameter name="timeoutMinutes" value="30"/>
            </parameters>
        </failure-condition>
        
        <failure-condition type="exitCode" id="exit-code">
            <parameters>
                <parameter name="exitCode" value="0"/>
            </parameters>
        </failure-condition>
    </failure-conditions>
    
    <!-- Dependencies -->
    <dependencies>
        <dependency type="snapshot" sourceBuildTypeId="GitRepo">
            <parameters>
                <parameter name="onDependencyFailure" value="FAIL_TO_START"/>
            </parameters>
        </dependency>
    </dependencies>
</build-type>
